// Code generated by MockGen. DO NOT EDIT.
// Source: graceful_server.go
//
// Generated by this command:
//
//	mockgen -source=graceful_server.go -destination=mock_graceful_graceful_server_test.go -package graceful
//

// Package graceful is a generated GoMock package.
package graceful

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGracefulServer is a mock of GracefulServer interface.
type MockGracefulServer struct {
	ctrl     *gomock.Controller
	recorder *MockGracefulServerMockRecorder
	isgomock struct{}
}

// MockGracefulServerMockRecorder is the mock recorder for MockGracefulServer.
type MockGracefulServerMockRecorder struct {
	mock *MockGracefulServer
}

// NewMockGracefulServer creates a new mock instance.
func NewMockGracefulServer(ctrl *gomock.Controller) *MockGracefulServer {
	mock := &MockGracefulServer{ctrl: ctrl}
	mock.recorder = &MockGracefulServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGracefulServer) EXPECT() *MockGracefulServerMockRecorder {
	return m.recorder
}

// ForceStop mocks base method.
func (m *MockGracefulServer) ForceStop() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ForceStop")
}

// ForceStop indicates an expected call of ForceStop.
func (mr *MockGracefulServerMockRecorder) ForceStop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ForceStop", reflect.TypeOf((*MockGracefulServer)(nil).ForceStop))
}

// Start mocks base method.
func (m *MockGracefulServer) Start() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start.
func (mr *MockGracefulServerMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockGracefulServer)(nil).Start))
}

// Stop mocks base method.
func (m *MockGracefulServer) Stop(arg0 context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Stop", arg0)
}

// Stop indicates an expected call of Stop.
func (mr *MockGracefulServerMockRecorder) Stop(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockGracefulServer)(nil).Stop), arg0)
}
